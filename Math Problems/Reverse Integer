Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1

Code --> (O(digits_of(x)))
#define ll long long
class Solution {
public:
    int reverse(int x) {
        ll num = 0;
        ll MAXI = INT_MAX;
        ll MINI = INT_MIN;
        while(x){
            long long rem = x%10;
            num = 10 * num + rem;
            x /= 10;
            if(num > MAXI || num < MINI)return 0;
        }
        return num;
    }
};
